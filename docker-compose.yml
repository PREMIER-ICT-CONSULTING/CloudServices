version: '3.2'

# networks:
#   public_overlay:
#     driver: overlay
#     external: false
#   agent_overlay:
#     driver: overlay
#     external: false
#   control_overlay:
#     driver: overlay
#     external: false

# volumes:
  # datastore_config: 
  datastore_portainer:
  # datastore_teleport:

services:
  # docker_proxy:
  #   image: tecnativa/docker-socket-proxy
  #   restart: unless-stopped
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   environment:
  #     CONTAINERS: 1
  #   networks:
  #     # - docker_host_proxy
  #     - control_overlay

  reverse_proxy:
    # The official v2 Traefik docker image
    image: traefik:latest
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
    # networks:
      # - docker_host_proxy
      # - control_overlay
      
  # cloud_cli:
  #   # build:
  #   #   context: ./
  #   #   dockerfile: Dockerfile
  #   image: docker/dev-environments-default:stable-1
  #   # privileged: true
  #   # interactive: true
  #   # tty: true
  #   # user: cspadmin    
  #   environment:
  #     - BUILD_DIR=$HOME/CloudServices
  #   command: 
  #     - git config --global user.name "PICTC"
  #     - git config --global user.email "support@premier-ictc.com"
  #     - git clone https://github.com/PREMIER-ICT-CONSULTING/CloudServices.git
  #     - cd "CloudServices"
  #   # ports:
  #   #   - "22"
  #   networks:
  #     # - docker_host_proxy
  #     - control_overlay
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - datastore_config:$HOME/CloudServices
  #     - /var/snap/traefik/common:$HOME/CloudServices/reverse_proxy
  #   # configs:
  #   #   - source: traefik_config
  #   #     target: ~/CloudServices/reverse_proxy
  #   #     uid: '103'
  #   #     gid: '103'
  #   #     mode: 0600
  #   deploy:
  #     mode: global
  #     placement:
  #       constraints: [node.role == manager]
  #     labels:
  #       - "traefik.enable=true"
  #       - "traefik.http.routers.cloud_cli.entrypoints=https"
  #       - "traefik.http.routers.cloud_cli.service=cloud_cli"
  #       - "traefik.http.routers.cloud_cli.rule=Host(`cli.cpanel.csp.cloud.premier-ictc.com`)"
  #       - "traefik.http.services.cloud_cli.loadbalancer.server.port=22"

  agent:
    image: portainer/agent:latest
    environment:
      AGENT_CLUSTER_ADDR: tasks.agent
      AGENT_PORT: 9001
      LOG_LEVEL: DEBUG
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - agent_overlay
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ee:latest
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - datastore_portainer:/data
    networks:
      # - docker_host_proxy
      - control_overlay
      - agent_overlay
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.portainer.entrypoints=https"
        - "traefik.http.routers.portainer.service=portainer"
        - "traefik.http.routers.portainer.rule=Host(`portainer.cpanel.csp.cloud.premier-ictc.com`)"
        - "traefik.http.services.portainer.loadbalancer.server.port=9000"
        # Edge
        - "traefik.http.routers.edge.service=edge"
        - "traefik.http.routers.edge.entrypoints=https"
        - "traefik.http.routers.edge.rule=Host(`edge.cpanel.csp.cloud.premier-ictc.com`)"
        - "traefik.http.services.edge.loadbalancer.server.port=8000"

  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    deploy:
      mode: replicated
      replicas: 1
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`cli.cpanel.csp.cloud.premier-ictc.com`)"


  # cpanel:
  #   # The official Teleport docker image
  #   image: public.ecr.aws/gravitational/teleport:13
  #   networks:
  #     - "control_overlay"
  #   # ports:
  #   #   - "3080"
  #   volumes:
  #     - ./sso:/etc/teleport
  #     - datastore_teleport:/var/lib/teleport
  #   labels:
  #     - "traefik.enable=true"
  #     # Proxy 
  #     - "traefik.http.routers.cpanel.entrypoints=https"
  #     - "traefik.http.routers.cpanel.service=cpanel"
  #     - "traefik.http.routers.cpanel.rule=Host(`*.cpanel.csp.cloud.premier-ictc.com`)"
  #     # - "traefik.http.routers.cpanel.rule=Host(`cpanel.csp.cloud.premier-ictc.com`)"
  #     - "traefik.http.services.cpanel.loadbalancer.server.port=3080"
  #     # Auth
  #     - "traefik.http.routers.sso.entrypoints=https"
  #     - "traefik.http.routers.sso.service=cpanel"
  #     - "traefik.http.routers.sso.rule=Host(`sso.csp.cloud.premier-ictc.com`)"
  #     - "traefik.http.services.sso.loadbalancer.server.port=3025"

# configs:
#   traefik_config:
#     file: ./traefik.yml
      # - ./control_plane.yml
      # - ./acme.json
      # - ./config/*
  # my_other_config:
  #   external: true
